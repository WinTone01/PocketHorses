plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'it.pika'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "codemc-snapshots"
        url = "https://repo.codemc.io/repository/maven-snapshots/"
    }
    maven {
        name = "jitpack.io"
        url = "https://jitpack.io"
    }
    maven {
        name = "CodeMC"
        url = "https://repo.codemc.io/repository/maven-public/"
    }
    maven {
        name = "placeholderapi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        name = "papermc"
        url = "https://papermc.io/repo/repository/maven-public/"
    }
    maven {
        name = "enginehub-maven"
        url = "https://maven.enginehub.org/repo/"
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation('fr.minuskube.inv:smart-invs:1.2.7') {
        transitive = false
    }

    implementation('net.wesjd:anvilgui:1.7.0-SNAPSHOT') {
        transitive = false
    }

    implementation('com.tchristofferson:ConfigUpdater:2.1-SNAPSHOT') {
        transitive = false
    }

    implementation('de.tr7zw:item-nbt-api:2.11.3') {
        transitive = false
    }

    implementation('io.papermc:paperlib:1.0.7') {
        transitive = false
    }

    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
    compileOnly 'me.clip:placeholderapi:2.11.3'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.5'
    compileOnly files('lib/Model-Engine.jar')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

shadowJar {
    archiveBaseName.set('PocketHorses')
    archiveClassifier.set('')
    archiveVersion.set('1.7.1.2')

    relocate 'fr.minuskube.inv', 'it.pika.libs.smartinvs'
    relocate 'net.wesjd.anvilgui', 'it.pika.libs.anvilgui'
    relocate 'com.tchristofferson.configupdater', 'it.pika.libs.config.updater'
    relocate 'de.tr7zw.changeme.nbtapi', 'it.pika.libs.nbt'
    relocate 'io.papermc.lib', "it.pika.libs.paper"
}